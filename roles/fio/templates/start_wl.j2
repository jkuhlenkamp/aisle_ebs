{# file: /roles/fio/templates/start_w_m.j2 #}
{# Jinja2 template to render a fio workload execution file #}
#!/bin/bash

# Add inital sleep time
# sleep 3000

# Go to result dir
cd {{ result_dir }}

### LOAD PHASE ###
# Write a timestamp to the log before fio load begins
now=$(date +'%Y_%m_%d-%H_%M_%S')
echo $now > {{ result_dir }}/result_load.log

# Execute workload in result dir and log timestamp
fio {{ workload_dir }}/wl_load.job >> {{ result_dir }}/result_load.log
now=$(date +'%Y_%m_%d-%H_%M_%S')
echo $now >> {{ result_dir }}/result_load.log
cd {{ home_dir }}


### RUN PHASE ###
# Write a timestamp to the log before fio run begins
now=$(date +'%Y_%m_%d-%H_%M_%S')
echo $now > {{ result_dir }}/result.log

# Execute workload in result dir and again log timestamp after finishing
fio {{ workload_dir }}/{{ wl_name }} >> {{ result_dir }}/result.log
now=$(date +'%Y_%m_%d-%H_%M_%S')
echo $now >> {{ result_dir }}/result.log
cd {{ home_dir }}

### COLLECTION PHASE ###
# Upload results to S3
s3_dir=s3://{{ aws_s3_bucket }}/fioebs/{{ exp_name }}/{{ aws_region }}/{{ aws_instance_type  | replace('.','_')}}/{{ ebs_device_type }}/{{ fio_nrfiles }}_files/{{ fio_filesize }}_filesize/{{ fio_ioengine }}_ioeng/{{ fio_numjobs }}_jobs/{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] | replace('.','_') }}
# s3_dir=s3://{{ aws_s3_bucket }}/fioebs/{{ exp_name }}/{{ aws_region }}/{{ aws_instance_type  | replace('.','_')}}/{{ ebs_device_type }}/{{ fio_rw }}_{{ fio_filesize }}_{{ fio_blocksize }}/{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] | replace('.','_') }}

# Move job to results dir
mv {{ workload_dir }}/wl_load.job {{ result_dir }}

# Move job to results dir
mv {{ workload_dir }}/{{ wl_name }} {{ result_dir }}

# Pack results
# tar czf /home/ubuntu/results.tar.gz /home/ubuntu/results
tar czf res-{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] | replace('.','-') }}.tar.gz {{ result_dir }}/* -C {{ result_dir }}
# tar czf result.tar.gz -C {{ result_dir }}

# Move results into results dir
# mv {{ home_dir }}/results.tar.gz /home/ubuntu/results
mv {{ home_dir }}/res-{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] | replace('.','-') }}.tar.gz {{ result_dir }}

#Copy all in dir "results" to s3
aws s3 cp {{ result_dir }}/ $s3_dir --region={{ s3_region }} --recursive

exit
